<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>rest-generate</artifactId>
	<packaging>pom</packaging>
	<name>Swagger REST Generation Project</name>
	<description>Project is used to generate the Rest API and Rest Client.</description>

	<parent>
		<groupId>com.laegler.rest</groupId>
		<artifactId>rest-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<properties>
		<api.project>rest-api</api.project>
		<client.project>rest-client</client.project>
		<ios.client.project>rest-ios-client</ios.client.project>
		<android.client.project>rest-android-client</android.client.project>

		<apidocs.path>${project.basedir}/../${api.project}/src/main/webapp/apidocs</apidocs.path>
		<yaml.path>${project.basedir}/api</yaml.path>
		<asciidoc.path>${project.basedir}/asciidoc</asciidoc.path>
	</properties>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>rest-generator</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.swagger/swagger-core -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-core</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.swagger/swagger-models -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-models</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.swagger/swagger-annotations -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.swagger/swagger-jersey2-jaxrs -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jersey2-jaxrs</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.swagger/swagger-servlet -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-servlet</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.swagger/swagger-generator -->
		<!-- <dependency> <groupId>io.swagger</groupId> <artifactId>swagger-generator</artifactId> 
			<version>2.2.1</version> </dependency> -->
		<!-- https://mvnrepository.com/artifact/io.swagger/swagger-codegen -->
		<!-- <dependency> <groupId>io.swagger</groupId> <artifactId>swagger-codegen</artifactId> 
			<version>2.2.1</version> </dependency> -->
		<!-- https://mvnrepository.com/artifact/io.swagger/swagger-parser -->
		<!-- <dependency> <groupId>io.swagger</groupId> <artifactId>swagger-parser</artifactId> 
			<version>1.0.22</version> </dependency> -->

		<!-- <dependency> <groupId>com.squareup.retrofit2</groupId> <artifactId>converter-gson</artifactId> 
			<version>${retrofit.version}</version> </dependency> <dependency> <groupId>com.squareup.retrofit2</groupId> 
			<artifactId>retrofit</artifactId> <version>${retrofit.version}</version> 
			</dependency> <dependency> <groupId>com.squareup.retrofit2</groupId> <artifactId>converter-scalars</artifactId> 
			<version>${retrofit.version}</version> </dependency> <dependency> <groupId>com.squareup.okhttp</groupId> 
			<artifactId>okhttp</artifactId> <version>${okhttp.version}</version> </dependency> 
			<dependency> <groupId>com.squareup.okhttp</groupId> <artifactId>logging-interceptor</artifactId> 
			<version>${okhttp.version}</version> </dependency> -->
	</dependencies>

	<build>
		<plugins>
			<!-- Swagger Plugin -->
			<!-- <plugin> <groupId>org.zalando.maven.plugins</groupId> <artifactId>swagger-codegen-maven-plugin</artifactId> 
				<version>${zalando.swagger.plugin.version}</version> <configuration> <language>jaxrsinterfaces</language> 
				<apiFile>${project.basedir}/src/main/resources/swagger.yaml</apiFile> <skipApigeneration>true</skipApigeneration> 
				<skipModelgeneration>true</skipModelgeneration> <yamlToJson>true</yamlToJson> 
				<yamlToJsonOutputDirectory>${project.basedir}/src/main/resources/</yamlToJsonOutputDirectory> 
				<enableBuilderSupport>true</enableBuilderSupport> <enable303>true</enable303> 
				<apiPackage>${project.groupId}.api2.handler</apiPackage> <modelPackage>${project.groupId}.api2.model</modelPackage> 
				<invokerPackage>${project.groupId}.api2.invoker</invokerPackage> </configuration> 
				<executions> <execution> <id>yaml2json</id> <goals> <goal>codegen</goal> 
				</goals> </execution> </executions> </plugin> -->
			<plugin>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<version>${io.swagger.plugin.version}</version>
				<dependencies>
					<!-- Custom API Mock Generator -->
					<dependency>
						<groupId>${project.groupId}</groupId>
						<artifactId>rest-generator</artifactId>
						<version>${project.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<!-- Generate RESTeasy API -->
					<execution>
						<id>api</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<!-- Custom API Mock Generator -->
							<!-- <language>jaxrs-resteasy-mock</language> -->

							<language>jaxrs-resteasy</language>
							<inputSpec>${yaml.path}/swagger.yaml</inputSpec>
							<output>${project.basedir}/../${api.project}</output>
							<addCompileSourceRoot>false</addCompileSourceRoot>
							<groupId>${project.groupId}</groupId>
							<artifactId>${api.project}</artifactId>
							<artifactVersion>${project.version}</artifactVersion>
							<apiPackage>${project.groupId}.api.handler</apiPackage>
							<modelPackage>${project.groupId}.api.model</modelPackage>
							<invokerPackage>${project.groupId}.api.invoker</invokerPackage>
							<verbose>true</verbose>
							<!-- <configHelp>true</configHelp> -->
						</configuration>
					</execution>
					<!-- Generate Java REST client -->
					<execution>
						<id>client</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<language>java</language>
							<inputSpec>${yaml.path}/swagger.yaml</inputSpec>
							<output>${project.basedir}/../${client.project}</output>
							<addCompileSourceRoot>false</addCompileSourceRoot>
							<groupId>${project.groupId}</groupId>
							<artifactId>${client.project}</artifactId>
							<artifactVersion>${project.version}</artifactVersion>
							<apiPackage>${project.groupId}.api.handler</apiPackage>
							<modelPackage>${project.groupId}.api.model</modelPackage>
							<invokerPackage>${project.groupId}.api.invoker</invokerPackage>
							<verbose>true</verbose>
							<!-- <configHelp>true</configHelp> -->
						</configuration>
					</execution>
					<!-- Generate Android REST client -->
					<execution>
						<id>android</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<language>android</language>
							<inputSpec>${yaml.path}/swagger.yaml</inputSpec>
							<output>${project.basedir}/../${android.client.project}</output>
							<addCompileSourceRoot>false</addCompileSourceRoot>
							<groupId>${project.groupId}</groupId>
							<artifactId>${android.client.project}</artifactId>
							<artifactVersion>${project.version}</artifactVersion>
							<verbose>true</verbose>
							<!-- <configHelp>true</configHelp> -->
							<!-- <library>okhttp-gson</library> -->
							<!-- <library>retrofit2</library> -->
						</configuration>
					</execution>
					<!-- Generate iOS REST client -->
					<execution>
						<id>ios</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<language>csharp</language>
							<inputSpec>${yaml.path}/swagger.yaml</inputSpec>
							<output>${project.basedir}/../${ios.client.project}</output>
							<addCompileSourceRoot>false</addCompileSourceRoot>
							<groupId>${project.groupId}</groupId>
							<artifactId>${ios.client.project}</artifactId>
							<artifactVersion>${project.version}</artifactVersion>
							<verbose>true</verbose>
							<!-- <configHelp>true</configHelp> -->
						</configuration>
					</execution>
					<!-- Generate simple HTML documentation -->
					<execution>
						<id>html</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<language>html</language>
							<inputSpec>${yaml.path}/swagger.yaml</inputSpec>
							<output>${apidocs.path}/html</output>
							<addCompileSourceRoot>false</addCompileSourceRoot>
							<verbose>true</verbose>
							<!-- <configHelp>true</configHelp> -->
						</configuration>
					</execution>
					<!-- Generate dynamic HTML documentation -->
					<execution>
						<id>dynamic-html</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<language>dynamic-html</language>
							<inputSpec>${yaml.path}/swagger.yaml</inputSpec>
							<output>${apidocs.path}/dynamic-html</output>
							<addCompileSourceRoot>false</addCompileSourceRoot>
							<verbose>true</verbose>
							<!-- <configHelp>true</configHelp> -->
						</configuration>
					</execution>
					<!-- Generate modern HTML documentation -->
					<execution>
						<id>html2</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<language>html2</language>
							<inputSpec>${yaml.path}/swagger.yaml</inputSpec>
							<output>${apidocs.path}/html2</output>
							<addCompileSourceRoot>false</addCompileSourceRoot>
							<verbose>true</verbose>
							<!-- <configHelp>true</configHelp> -->
						</configuration>
					</execution>
					<!-- Generate Confluence WikiText documentation -->
					<execution>
						<id>cwiki</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<language>cwiki</language>
							<inputSpec>${yaml.path}/swagger.yaml</inputSpec>
							<output>${apidocs.path}/cwiki</output>
							<addCompileSourceRoot>false</addCompileSourceRoot>
							<verbose>true</verbose>
							<!-- <configHelp>true</configHelp> -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.github.swagger2markup</groupId>
				<artifactId>swagger2markup-maven-plugin</artifactId>
				<version>${swagger2markup.version}</version>
				<dependencies>
					<dependency>
						<groupId>io.github.swagger2markup</groupId>
						<artifactId>swagger2markup-import-files-ext</artifactId>
						<version>${swagger2markup.version}</version>
					</dependency>
					<dependency>
						<groupId>io.github.swagger2markup</groupId>
						<artifactId>swagger2markup-spring-restdocs-ext</artifactId>
						<version>${swagger2markup.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<swaggerInput>${yaml.path}/swagger.yaml</swaggerInput>
					<outputDir>${apidocs.path}/asciidoc</outputDir>
					<config>
						<swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
						<swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>

						<swagger2markup.extensions.dynamicOverview.contentPath>${asciidoc.path}/extensions/overview</swagger2markup.extensions.dynamicOverview.contentPath>
						<swagger2markup.extensions.dynamicDefinitions.contentPath>${asciidoc.path}/extensions/definitions</swagger2markup.extensions.dynamicDefinitions.contentPath>
						<swagger2markup.extensions.dynamicPaths.contentPath>${asciidoc.path}/extensions/paths</swagger2markup.extensions.dynamicPaths.contentPath>
						<swagger2markup.extensions.dynamicSecurity.contentPath>${asciidoc.path}/extensions/security/</swagger2markup.extensions.dynamicSecurity.contentPath>

						<swagger2markup.extensions.springRestDocs.snippetBaseUri>${asciidoc.path}</swagger2markup.extensions.springRestDocs.snippetBaseUri>
						<swagger2markup.extensions.springRestDocs.defaultSnippets>false</swagger2markup.extensions.springRestDocs.defaultSnippets>
					</config>
				</configuration>
				<executions>
					<execution>
						<id>markup</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>convertSwagger2markup</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Run the generated asciidoc through Asciidoctor to generate other 
				documentation types, such as PDFs or HTML5 -->
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>1.5.3</version>
				<!-- Include Asciidoctor PDF for pdf generation -->
				<dependencies>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-pdf</artifactId>
						<version>1.5.0-alpha.10.1</version>
					</dependency>
				</dependencies>
				<!-- Configure generic document generation settings -->
				<configuration>
					<sourceDirectory>${asciidoc.path}</sourceDirectory>
					<sourceDocumentName>index.adoc</sourceDocumentName>
					<attributes>
						<doctype>book</doctype>
						<toc>left</toc>
						<toclevels>3</toclevels>
						<numbered></numbered>
						<hardbreaks></hardbreaks>
						<sectlinks></sectlinks>
						<sectanchors></sectanchors>
						<generated>${apidocs.path}/asciidoc</generated>
					</attributes>
				</configuration>
				<!-- Since each execution can only handle one backend, run separate executions 
					for each desired output type -->
				<executions>
					<execution>
						<id>html5</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html5</backend>
							<outputDirectory>${apidocs.path}/html5</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>pdf</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>pdf</backend>
							<outputDirectory>${apidocs.path}/pdf</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> <groupId>org.asciidoctor</groupId> <artifactId>asciidoctor-maven-plugin</artifactId> 
				<version>1.5.3</version> <executions> <execution> <id>output-html</id> <phase>generate-resources</phase> 
				<goals> <goal>process-asciidoc</goal> </goals> <configuration> <output>${apidocs.path}/ascii</output> 
				</configuration> </execution> </executions> </plugin> -->

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>${compiler.source.version}</source>
					<target>${compiler.target.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
				<configuration>
					<aggregate>true</aggregate>
					<source>${compiler.source.version}</source>
					<encoding>UTF-8</encoding>
					<maxmemory>1g</maxmemory>
					<show>private</show>
					<additionalparam>${javadoc.opts}</additionalparam>
					<excludePackageNames>target.generated-sources.annotations</excludePackageNames>
					<!-- <taglets> <taglet> <tagletClass>net.sourceforge.taglets.Taglets</tagletClass> 
						<tagletArtifact> <groupId>net.sourceforge.taglets</groupId> <artifactId>taglets</artifactId> 
						<version>2.0.3</version> </tagletArtifact> </taglet> </taglets> -->
					<failOnError>false</failOnError>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>javadoc</goal>
							<goal>jar</goal>
							<goal>test-javadoc</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Swagger UI -->
			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>download-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<id>swagger-ui</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>https://github.com/swagger-api/swagger-ui/archive/v${swagger-ui.version}.tar.gz</url>
							<unpack>true</unpack>
							<outputDirectory>${project.build.directory}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-swagger-ui</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${apidocs.path}/swagger-ui</outputDirectory>
							<resources>
								<resource>
									<directory>${project.build.directory}/swagger-ui-${swagger-ui.version}/dist</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-yaml</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${apidocs.path}</outputDirectory>
							<resources>
								<resource>
									<directory>${yaml.path}</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-asciidoc</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							${apidocs.path}
							<outputDirectory>${apidocs.path}/asciidoc</outputDirectory>
							<resources>
								<resource>
									<directory>${asciidoc.path}</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.9</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>summary</report>
							<report>license</report>
							<report>modules</report>
							<report>project-team</report>
							<report>mailing-list</report>
							<report>cim</report>
							<report>issue-tracking</report>
							<report>scm</report>
							<report>dependencies</report>
							<report>dependency-info</report>
							<report>dependency-convergence</report>
							<report>dependency-management</report>
							<report>plugin-management</report>
							<report>plugins</report>
							<report>help</report>
							<!-- <report>maven-doccheck-plugin</report> -->
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!-- Generate Changelog from Jira, Github or changes.xml -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<xmlPath>${project.basedir}/src/site/changes.xml</xmlPath>
					<columnNames>Type,Key,Summary,Assignee,Status,Fix Version</columnNames>
					<useJql>true</useJql>
					<githubAPIScheme>https</githubAPIScheme>
					<githubAPIPort>443</githubAPIPort>
					<onlyMilestoneIssues>false</onlyMilestoneIssues>
					<includeOpenIssues>false</includeOpenIssues>
					<onlyCurrentVersion>true</onlyCurrentVersion>
					<fixVersionIds>13722,12515</fixVersionIds>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<outputDirectory>${project.basedir}/site2</outputDirectory>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

</project>