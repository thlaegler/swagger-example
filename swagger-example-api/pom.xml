<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>swagger-example-api</artifactId>
	<packaging>war</packaging>
	<name>Example Swagger Example REST API</name>
	<description>This Project contains the generated Swagger REST API</description>

	<parent>
		<groupId>com.laegler.swagger</groupId>
		<artifactId>swagger-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<properties>
		<!-- <site.web.path>${project.build.directory}/webapp/docs</site.web.path> -->
		<site.web.path>${project.basedir}/src/main/webapp/docs</site.web.path>

		<!-- Swagger Projects -->
		<api.project>swagger-example-api</api.project>
		<client.project>swagger-example-client</client.project>
		<ios.client.project>swagger-example-ios</ios.client.project>
		<android.client.project>swagger-example-android</android.client.project>

		<!-- Swagger File Options -->
		<apidocs.path>${site.web.path}/apidocs</apidocs.path>
		<asciidoc.path>${project.basedir}/assets/asciidoc</asciidoc.path>
		<swagger.path>${project.basedir}/assets/api</swagger.path>
		<swagger.config.file>${swagger.path}/config.json</swagger.config.file>
		<swagger.file>${swagger.path}/swagger.yaml</swagger.file>

		<!-- Docker -->
		<server.host>localhost</server.host>
		<server.port>8080</server.port>
		<server.port.admin>8081</server.port.admin>
	</properties>

	<build>
		<finalName>${project.artifactId}</finalName>

		<plugins>
			<!-- Necessary for Heroku -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.basedir}/src/gen/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>${compiler.source.version}</source>
					<target>${compiler.target.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<warName>${project.build.finalName}</warName>
					<!-- <outputDirectory>${site.web.path}</outputDirectory> -->
				</configuration>
			</plugin>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-source-plugin</artifactId> 
				<version>3.0.1</version> <executions> <execution> <id>attach-sources</id> 
				<goals> <goal>jar</goal> </goals> </execution> </executions> </plugin> -->
			<plugin>
				<groupId>doccheck</groupId>
				<artifactId>maven-doccheck-plugin</artifactId>
				<version>1.4-0.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.19.1</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.4</version>
				<configuration>
					<!-- <templateFile>${basedir}/maven-site.vm</templateFile> -->
					<outputDirectory>${site.web.path}</outputDirectory>
					<port>9000</port>
					<tempWebappDirectory>${site.web.path}/temp</tempWebappDirectory>
					<!-- <locales>en,de</locales> -->
				</configuration>
				<dependencies>
					<dependency>
						<groupId>lt.velykis.maven.skins</groupId>
						<artifactId>reflow-velocity-tools</artifactId>
						<version>1.1.1</version>
					</dependency>
					<dependency>
						<groupId>org.apache.velocity</groupId>
						<artifactId>velocity</artifactId>
						<version>1.7</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>com.agilejava.docbkx</groupId>
				<artifactId>docbkx-maven-plugin</artifactId>
				<version>2.0.17</version>
				<executions>
					<execution>
						<id>docbkx</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate-html</goal>
							<goal>generate-xhtml</goal>
							<goal>generate-xhtml5</goal>
							<goal>generate-webhelp</goal>
							<!-- <goal>generate-rtf</goal> -->
							<goal>generate-pdf</goal>
							<goal>generate-eclipse</goal>
							<goal>generate-manpages</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>net.sf.xslthl</groupId>
						<artifactId>xslthl</artifactId>
						<version>2.0.1</version>
						<scope>runtime</scope>
					</dependency>
					<dependency>
						<groupId>net.sf.offo</groupId>
						<artifactId>fop-hyph</artifactId>
						<version>1.2</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
				<configuration>
					<targetDirectory>${site.web.path}/docbook</targetDirectory>
					<includes>book.xml</includes>
					<highlightSource>1</highlightSource>
					<hyphenate>true</hyphenate>
					<hyphenateVerbatim>true</hyphenateVerbatim>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pdf-plugin</artifactId>
				<version>1.3</version>
				<configuration>
					<!-- <locales>en,de</locales> -->
					<!-- <implementation>itext</implementation> -->
					<aggregate>true</aggregate>
					<outputDirectory>${site.web.path}</outputDirectory>
					<includeReports>true</includeReports>
				</configuration>
				<executions>
					<execution>
						<id>pdf</id>
						<phase>site</phase>
						<goals>
							<goal>pdf</goal>
						</goals>
					</execution>
				</executions>
				<!-- <dependencies> <dependency> <groupId>org.apache.maven.doxia</groupId> 
					<artifactId>doxia-core</artifactId> <version>1.7</version> </dependency> 
					<dependency> <groupId>org.apache.maven.doxia</groupId> <artifactId>doxia-module-markdown</artifactId> 
					<version>1.7</version> </dependency> <dependency> <groupId>org.apache.maven.doxia</groupId> 
					<artifactId>doxia-doc-renderer</artifactId> <version>1.7</version> </dependency> 
					<dependency> <groupId>org.apache.maven.doxia</groupId> <artifactId>doxia-module-rtf</artifactId> 
					<version>1.7</version> </dependency> </dependencies> -->
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
				<configuration>
					<aggregate>true</aggregate>
					<source>${compiler.source.version}</source>
					<encoding>UTF-8</encoding>
					<maxmemory>1g</maxmemory>
					<show>private</show>
					<additionalparam>${javadoc.opts}</additionalparam>
					<excludePackageNames>target.generated-sources.annotations</excludePackageNames>
					<!-- <taglets> <taglet> <tagletClass>net.sourceforge.taglets.Taglets</tagletClass> 
						<tagletArtifact> <groupId>net.sourceforge.taglets</groupId> <artifactId>taglets</artifactId> 
						<version>2.0.3</version> </tagletArtifact> </taglet> </taglets> -->
					<failOnError>false</failOnError>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>javadoc</goal>
							<goal>jar</goal>
							<goal>test-javadoc</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Generate Swagger JSON from Java API or YAML -->
			<!-- https://github.com/kongchen/swagger-maven-plugin -->
			<plugin>
				<groupId>com.github.kongchen</groupId>
				<artifactId>swagger-maven-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<apiSources>
						<apiSource>
							<info>
								<title>${project.name}</title>
								<version>${project.version}</version>
							</info>
							<locations>${project.groupId}</locations>
							<basePath>http://localhost:8080/example</basePath>
							<outputPath>${site.web.path}/apidocs</outputPath>
							<swaggerDirectory>${site.web.path}/apidocs</swaggerDirectory>
						</apiSource>
					</apiSources>
				</configuration>
				<executions>
					<execution>
						<id>markdown</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- https://mvnrepository.com/artifact/com.github.jeluard/plantuml-maven-plugin -->
			<plugin>
				<groupId>com.github.jeluard</groupId>
				<artifactId>plantuml-maven-plugin</artifactId>
				<version>7954</version>
				<configuration>
					<sourceFiles>
						<directory>${site.web.path}</directory>
					</sourceFiles>
					<format>png</format>
					<outputInSourceDirectory>true</outputInSourceDirectory>
					<!-- <verbose>true</verbose> -->
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.kuali.maven.plugins</groupId>
				<artifactId>graph-maven-plugin</artifactId>
				<version>1.2.3</version>
				<configuration>
					<keepDotFile>true</keepDotFile>
				</configuration>
				<executions>
					<execution>
						<id>graphviz</id>
						<phase>site</phase>
						<goals>
							<goal>dependencies</goal>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.4.0.M1</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<webAppSourceDirectory>${project.basedir}/src/main/webapp</webAppSourceDirectory>
					<webApp>
						<contextPath>/example</contextPath>
					</webApp>
					<stopPort>9966</stopPort>
					<stopKey>example</stopKey>
					<stopWait>10</stopWait>
				</configuration>
			</plugin>
			<!-- https://mvnrepository.com/artifact/org.jenkins-ci.main/maven-plugin -->
			<plugin>
				<groupId>org.jenkins-ci.main</groupId>
				<artifactId>maven-plugin</artifactId>
				<version>2.13</version>
			</plugin>

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-war-plugin</artifactId> 
				<version>2.6</version> <configuration> <warName>${project.build.finalName}</warName> 
				<webappDirectory>${basedir}/target/${project.build.finalName}</webappDirectory> 
				<webResources> <webResource> <directory>${project.build.directory}/swagger-ui-${swagger-ui.version}/dist</directory> 
				<targetPath>swagger-ui</targetPath> </webResource> </webResources> </configuration> 
				</plugin> -->
		</plugins>
	</build>


	<reporting>
		<plugins>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-report-plugin</artifactId> 
				<version>2.19.1</version> <configuration> <outputDirectory>${project.basedir}/src/main/webapp/newsite</outputDirectory> 
				</configuration> </plugin> -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.9</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>summary</report>
							<report>license</report>
							<report>modules</report>
							<report>project-team</report>
							<report>mailing-list</report>
							<report>cim</report>
							<report>issue-tracking</report>
							<report>scm</report>
							<report>dependencies</report>
							<report>dependency-info</report>
							<report>dependency-convergence</report>
							<report>dependency-management</report>
							<report>plugin-management</report>
							<report>plugins</report>
							<report>help</report>
							<!-- <report>maven-doccheck-plugin</report> -->
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
				<reportSets>
					<reportSet>
						<id>html</id>
						<reports>
							<report>javadoc</report>
							<report>test-javadoc</report>
						</reports>
						<configuration>
							<name>JavaDoc HTML</name>
							<description>HTML documents of JavaDoc.</description>
							<destDir>html</destDir>
							<show>private</show>
							<additionalparam>${javadoc.opts}</additionalparam>
							<!-- <excludePackageNames>target.generated-sources.annotations</excludePackageNames> -->
							<failOnError>false</failOnError>
						</configuration>
					</reportSet>
					<!-- JavaDoc PDF -->
					<reportSet>
						<id>pdf</id>
						<reports>
							<report>javadoc</report>
						</reports>
						<configuration>
							<name>JavaDoc PDF</name>
							<description>PDF document of JavaDoc
								(com.tarsec.javadoc.pdfdoclet).</description>
							<destDir>pdf</destDir>
							<doclet>com.tarsec.javadoc.pdfdoclet.PDFDoclet</doclet>
							<docletPath>${basedir}/assets/doclet/pdf/pdfdoclet-1.0.3-all.jar</docletPath>
							<useStandardDocletOptions>false</useStandardDocletOptions>
							<additionalparam>-pdf javadoc.pdf ${javadoc.opts}</additionalparam>
							<excludePackageNames>target.generated-sources.annotations</excludePackageNames>
							<failOnError>false</failOnError>
						</configuration>
					</reportSet>
					<!-- JavaDoc DocCheck -->
					<!-- <reportSet> <id>doccheck</id> <reports> <report>javadoc</report> 
						<report>test-javadoc</report> </reports> <configuration> <name>${project.name}</name> 
						<description>${project.description}</description> <doclet>com.sun.tools.doclets.doccheck.DocCheck</doclet> 
						<docletArtifact> <groupId>com.sun.tools.doclets</groupId> <artifactId>doccheck</artifactId> 
						<version>1.2b2</version> </docletArtifact> <additionalparam>-d ${project.basedir}/src/main/webapp/doccheck 
						${javadoc.opts}</additionalparam> <destDir>doccheck</destDir><failOnError>false</failOnError></configuration> 
						</reportSet> -->
					<!-- <reportSet> <id>doccheck2</id> <reports> <report>javadoc</report> 
						<report>test-javadoc</report> </reports> <configuration> <name>${project.name}</name> 
						<description>${project.description}</description> <doclet>com.sun.tools.doclets.doccheck.DocCheck</doclet> 
						<docletArtifact> <groupId>mx.com.inftel.oss</groupId> <artifactId>java7-markdown-doclets</artifactId> 
						<version>1.6-b147-133</version> </docletArtifact> <additionalparam>-d ${project.basedir}/src/main/webapp/doccheck2 
						${javadoc.opts}</additionalparam> <destDir>${project.basedir}/src/main/webapp/doccheck2</destDir><failOnError>false</failOnError></configuration> 
						</reportSet> -->
					<!-- JavaDoc yUML -->
					<!-- Doesn't work with JDK 1.8: https://power2build.wordpress.com/2015/02/24/uml-doclet-in-eclipse/ -->
					<!-- Run with JDK 1.7 and change compiler.source.version and compiler.target.version 
						in parent POM -->
					<reportSet>
						<id>yuml</id>
						<reports>
							<report>javadoc</report>
							<report>test-javadoc</report>
						</reports>
						<configuration>
							<name>JavaDoc UML (yUML)</name>
							<description>UML diagrams in HTML JavaDoc
								(ydoc.doclets.YStandard).</description>
							<destDir>yuml</destDir>
							<doclet>ydoc.doclets.YStandard</doclet>
							<docletPath>${project.basedir}/assets/doclet/uml/lib/ydoc.jar:${project.basedir}/assets/doclet/uml/lib/styleed.jar:${project.basedir}/assets/doclet/uml/resources</docletPath>
							<show>private</show>
							<additionalparam>-umlautogen ${javadoc.opts}</additionalparam>
							<failOnError>false</failOnError>
						</configuration>
					</reportSet>
					<!-- JavaDoc plantUML -->
					<reportSet>
						<id>plantuml</id>
						<reports>
							<report>javadoc</report>
							<report>test-javadoc</report>
						</reports>
						<configuration>
							<name>JavaDoc UML (plantUML)</name>
							<description>UML diagrams in HTML JavaDoc (org.umlgraph.doclet).</description>
							<destDir>plantuml</destDir>
							<doclet>nl.talsmasoftware.umldoclet.UMLDoclet</doclet>
							<docletArtifact>
								<groupId>nl.talsmasoftware</groupId>
								<artifactId>umldoclet</artifactId>
								<version>1.0.3</version>
							</docletArtifact>
							<show>private</show>
							<additionalparam>-umlSkipStandardDoclet true -umlLogLevel DEBUG
								${javadoc.opts}</additionalparam>
							<failOnError>false</failOnError>
						</configuration>
					</reportSet>
					<!-- JavaDoc UML2 -->
					<reportSet>
						<id>uml</id>
						<reports>
							<report>javadoc</report>
							<report>test-javadoc</report>
						</reports>
						<configuration>
							<name>JavaDoc UML (umlgraph)</name>
							<description>UML diagrams in HTML JavaDoc (org.umlgraph.doclet).</description>
							<destDir>uml</destDir>
							<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
							<docletPath>${basedir}/assets/doclet/uml/doclet-5.4.jar</docletPath>
							<!-- <docletArtifact> <groupId>org.umlgraph</groupId> <artifactId>doclet</artifactId> 
								<version>5.4</version> </docletArtifact> -->
							<show>private</show>
							<additionalparam>
								-inferrel -inferdep -quiet -hide java.*
								-collpackages java.util.* -qualify
								-postfixpackage
								-nodefontsize 9
								-nodefontpackagesize 7 ${javadoc.opts}
							</additionalparam>
							<failOnError>false</failOnError>
						</configuration>
					</reportSet>
					<!-- dbdoclet -->
					<reportSet>
						<id>dbdoclet</id>
						<reports>
							<report>javadoc</report>
							<report>test-javadoc</report>
						</reports>
						<configuration>
							<name>JavaDoc DocBook</name>
							<description>JavaDoc DocBook</description>
							<destDir>dbdoclet</destDir>
							<doclet>org.dbdoclet.doclet.docbook.DocBookDoclet</doclet>
							<docletArtifact>
								<groupId>org.dbdoclet</groupId>
								<artifactId>dbdoclet</artifactId>
								<version>8.0.2</version>
							</docletArtifact>
							<show>private</show>
							<additionalparam>${javadoc.opts}</additionalparam>
							<failOnError>false</failOnError>
						</configuration>
					</reportSet>
					<!-- ApiGuide -->
					<reportSet>
						<id>apiguide</id>
						<reports>
							<report>javadoc</report>
							<report>test-javadoc</report>
						</reports>
						<configuration>
							<name>JavaDoc ApiGuide</name>
							<description>JavaDoc ApiGuide.</description>
							<destDir>apiguide</destDir>
							<doclet>apiguide.ApiGuide</doclet>
							<docletPath>${basedir}/assets/doclet/apiguide/ApiGuideDoclet.jar</docletPath>
							<show>private</show>
							<additionalparam>${javadoc.opts}</additionalparam>
							<failOnError>false</failOnError>
						</configuration>
					</reportSet>
					<!-- XHTML -->
					<reportSet>
						<id>xhtml</id>
						<reports>
							<report>javadoc</report>
							<report>test-javadoc</report>
						</reports>
						<configuration>
							<name>JavaDoc XHTML</name>
							<description>JavaDoc XHTML.</description>
							<destDir>xhtml</destDir>
							<doclet>net.sourceforge.xhtmldoclet.Doclet</doclet>
							<docletPath>${basedir}/assets/doclet/xhtml/XHTML_Doclet_0.4.jar</docletPath>
							<show>private</show>
							<additionalparam>${javadoc.opts}</additionalparam>
							<failOnError>false</failOnError>
						</configuration>
					</reportSet>
					<!-- LaTeX -->
					<reportSet>
						<id>latex</id>
						<reports>
							<report>javadoc</report>
							<report>test-javadoc</report>
						</reports>
						<configuration>
							<name>JavaDoc LaTeX</name>
							<description>JavaDoc LaTeX.</description>
							<destDir>latex</destDir>
							<doclet>org.wonderly.doclets.TexDoclet</doclet>
							<docletPath>${basedir}/assets/doclet/latex/texdoclet.jar</docletPath>
							<show>private</show>
							<additionalparam>${javadoc.opts}</additionalparam>
							<failOnError>false</failOnError>
						</configuration>
					</reportSet>
					<!-- JavaDoc UML3 -->
					<!-- <reportSet> <id>uml3</id> <reports> <report>javadoc</report> <report>test-javadoc</report> 
						</reports> <configuration> <name>JavaDoc UML (spinellis)</name> <description>UML 
						diagrams in HTML JavaDoc (gr.spinellis.UmlGraph).</description> <destDir>html</destDir> 
						<doclet>gr.spinellis.umlgraph.doclet.UmlGraph</doclet> <docletArtifact> <groupId>gr.spinellis</groupId> 
						<artifactId>UmlGraph</artifactId> <version>4.6</version> </docletArtifact> 
						<show>private</show> <failOnError>false</failOnError> </configuration> </reportSet> -->
				</reportSets>
			</plugin>
			<!-- Dependency Graph. GraphViz must be installed -->
			<plugin>
				<groupId>org.kuali.maven.plugins</groupId>
				<artifactId>graph-maven-plugin</artifactId>
				<version>1.2.3</version>
				<configuration>
					<keepDotFile>true</keepDotFile>
				</configuration>
			</plugin>
			<!-- Dependency Graph with GraphViz -->
			<plugin>
				<groupId>us.bryon</groupId>
				<artifactId>graphviz-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<basedir>${site.web.path}</basedir>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<docTitle>JavaDoc Source HTML</docTitle>
					<destDir>source</destDir>
					<linkJavadoc>true</linkJavadoc>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<docTitle>JavaDoc Source HTML</docTitle>
					<destDir>source</destDir>
					<linkJavadoc>true</linkJavadoc>
				</configuration>
			</plugin>
			<!-- Generate Changelog from Jira, Github or changes.xml -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<xmlPath>${project.basedir}/src/site/changes.xml</xmlPath>
					<columnNames>Type,Key,Summary,Assignee,Status,Fix Version</columnNames>
					<useJql>true</useJql>
					<githubAPIScheme>https</githubAPIScheme>
					<githubAPIPort>443</githubAPIPort>
					<onlyMilestoneIssues>false</onlyMilestoneIssues>
					<includeOpenIssues>false</includeOpenIssues>
					<onlyCurrentVersion>true</onlyCurrentVersion>
					<fixVersionIds>13722,12515</fixVersionIds>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-changelog-plugin</artifactId> 
				<version>2.3</version> <configuration> <type>tag</type> <tags> <tag implementation="java.lang.String">alpha-2</tag> 
				<tag implementation="java.lang.String">alpha-3</tag> </tags> <type>date</type> 
				<dates> <date implementation="java.lang.String">2005-08-01</date> <date implementation="java.lang.String">2005-09-01</date> 
				</dates> <dateFormat>yyyy-MM-dd</dateFormat> </configuration> <reportSets> 
				<reportSet> <id>dual-report</id> <configuration> <type>range</type> <range>30</range> 
				</configuration> <reports> <report>changelog</report> <report>file-activity</report> 
				</reports> </reportSet> </reportSets> </plugin> -->

		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>swagger</id>
			<build>
				<plugins>
					<!-- Zalando Swagger Plugin -->
					<!-- <plugin> <groupId>org.zalando.maven.plugins</groupId> <artifactId>swagger-codegen-maven-plugin</artifactId> 
						<version>${zalando.swagger.plugin.version}</version> <configuration> <language>jaxrsinterfaces</language> 
						<apiFile>${project.basedir}/src/main/resources/swagger.yaml</apiFile> <skipApigeneration>true</skipApigeneration> 
						<skipModelgeneration>true</skipModelgeneration> <yamlToJson>true</yamlToJson> 
						<yamlToJsonOutputDirectory>${project.basedir}/src/main/resources/</yamlToJsonOutputDirectory> 
						<enableBuilderSupport>true</enableBuilderSupport> <enable303>true</enable303> 
						<apiPackage>${project.groupId}.api2.handler</apiPackage> <modelPackage>${project.groupId}.api2.model</modelPackage> 
						<invokerPackage>${project.groupId}.api2.invoker</invokerPackage> </configuration> 
						<executions> <execution> <id>yaml2json</id> <goals> <goal>codegen</goal> 
						</goals> </execution> </executions> </plugin> -->
					<!-- Example Swagger Plugin -->
					<!-- <plugin> <groupId>${project.groupId}</groupId> <artifactId>swagger-maven-plugin</artifactId> 
						<version>${project.version}</version> <dependencies> <dependency> <groupId>${project.groupId}</groupId> 
						<artifactId>swagger-generator</artifactId> <version>${project.version}</version> 
						</dependency> </dependencies> <executions> <execution> <id>api</id> <phase>generate-sources</phase> 
						<goals> <goal>generate</goal> </goals> <configuration> <language>${project.groupId}.generator.ExampleServerMainCodegen</language> 
						<inputSpec>${swagger.file}</inputSpec> <output>${project.basedir}</output> 
						<addCompileSourceRoot>true</addCompileSourceRoot> <groupId>${project.groupId}</groupId> 
						<artifactId>${api.project}</artifactId> <artifactVersion>${project.version}</artifactVersion> 
						<apiPackage>${project.groupId}.api.handler</apiPackage> <modelPackage>${project.groupId}.api.model</modelPackage> 
						<invokerPackage>${project.groupId}.api.invoker</invokerPackage> <configurationFile>${swagger.config.file}</configurationFile> 
						</configuration> </execution> </executions> </plugin> -->
					<plugin>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-codegen-maven-plugin</artifactId>
						<version>${io.swagger.plugin.version}</version>
						<dependencies>
							<!-- Custom API Mock Generator -->
							<dependency>
								<groupId>${project.groupId}</groupId>
								<artifactId>swagger-generator</artifactId>
								<version>${project.version}</version>
							</dependency>
						</dependencies>
						<executions>
							<!-- Generate RESTeasy API -->
							<execution>
								<id>api</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<!-- Custom API Mock Generator -->
									<language>${project.groupId}.generator.ExampleServerCodegen</language>
									<inputSpec>${swagger.file}</inputSpec>
									<output>${project.basedir}</output>
									<addCompileSourceRoot>true</addCompileSourceRoot>
									<groupId>${project.groupId}</groupId>
									<artifactId>${api.project}</artifactId>
									<artifactVersion>${project.version}</artifactVersion>
									<apiPackage>${project.groupId}.handler</apiPackage>
									<modelPackage>${project.groupId}.model</modelPackage>
									<invokerPackage>${project.groupId}.invoker</invokerPackage>
									<!-- <verbose>true</verbose> -->
									<!-- <configHelp>true</configHelp> -->
								</configuration>
							</execution>
							<!-- Generate Java REST client -->
							<execution>
								<id>client</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<language>java</language>
									<inputSpec>${swagger.file}</inputSpec>
									<output>${project.basedir}/../${client.project}</output>
									<addCompileSourceRoot>false</addCompileSourceRoot>
									<groupId>${project.groupId}</groupId>
									<artifactId>${client.project}</artifactId>
									<artifactVersion>${project.version}</artifactVersion>
									<apiPackage>${project.groupId}.handler</apiPackage>
									<modelPackage>${project.groupId}.model</modelPackage>
									<invokerPackage>${project.groupId}.invoker</invokerPackage>
									<!-- <verbose>true</verbose> -->
									<!-- <configHelp>true</configHelp> -->
								</configuration>
							</execution>
							<!-- Generate Android REST client -->
							<execution>
								<id>android</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<language>android</language>
									<inputSpec>${swagger.file}</inputSpec>
									<output>${project.basedir}/../${android.client.project}</output>
									<addCompileSourceRoot>false</addCompileSourceRoot>
									<groupId>${project.groupId}</groupId>
									<artifactId>${android.client.project}</artifactId>
									<artifactVersion>${project.version}</artifactVersion>
									<!-- <library>retrofit</library> -->
									<!-- <verbose>true</verbose> -->
									<!-- <configHelp>true</configHelp> -->
								</configuration>
							</execution>
							<!-- Generate iOS REST client -->
							<execution>
								<id>ios</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<language>csharp</language>
									<inputSpec>${swagger.file}</inputSpec>
									<output>${project.basedir}/../${ios.client.project}</output>
									<addCompileSourceRoot>false</addCompileSourceRoot>
									<groupId>${project.groupId}</groupId>
									<artifactId>${ios.client.project}</artifactId>
									<artifactVersion>${project.version}</artifactVersion>
									<!-- <verbose>true</verbose> -->
									<!-- <configHelp>true</configHelp> -->
								</configuration>
							</execution>
							<!-- Generate simple HTML documentation -->
							<execution>
								<id>html</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<language>html</language>
									<inputSpec>${swagger.file}</inputSpec>
									<output>${apidocs.path}/html</output>
									<addCompileSourceRoot>false</addCompileSourceRoot>
									<!-- <verbose>true</verbose> -->
									<!-- <configHelp>true</configHelp> -->
								</configuration>
							</execution>
							<!-- Generate dynamic HTML documentation -->
							<execution>
								<id>dynamic-html</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<language>dynamic-html</language>
									<inputSpec>${swagger.file}</inputSpec>
									<output>${apidocs.path}/dynamic-html</output>
									<addCompileSourceRoot>false</addCompileSourceRoot>
									<!-- <verbose>true</verbose> -->
									<!-- <configHelp>true</configHelp> -->
								</configuration>
							</execution>
							<!-- Generate modern HTML documentation -->
							<execution>
								<id>html2</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<language>html2</language>
									<inputSpec>${swagger.file}</inputSpec>
									<output>${apidocs.path}/html2</output>
									<addCompileSourceRoot>false</addCompileSourceRoot>
									<!-- <verbose>true</verbose> -->
									<!-- <configHelp>true</configHelp> -->
								</configuration>
							</execution>
							<!-- Generate Confluence WikiText documentation -->
							<execution>
								<id>cwiki</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<language>cwiki</language>
									<inputSpec>${swagger.file}</inputSpec>
									<output>${apidocs.path}/cwiki</output>
									<addCompileSourceRoot>false</addCompileSourceRoot>
									<!-- <verbose>true</verbose> -->
									<!-- <configHelp>true</configHelp> -->
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- API Doc: Markdown -->
					<!-- requires JDK 1.8 -->
					<!-- <plugin> <groupId>io.github.swagger2markup</groupId> <artifactId>swagger2markup-maven-plugin</artifactId> 
						<version>${swagger2markup.version}</version> <dependencies> <dependency> 
						<groupId>io.github.swagger2markup</groupId> <artifactId>swagger2markup-import-files-ext</artifactId> 
						<version>${swagger2markup.version}</version> </dependency> <dependency> <groupId>io.github.swagger2markup</groupId> 
						<artifactId>swagger2markup-spring-restdocs-ext</artifactId> <version>${swagger2markup.version}</version> 
						</dependency> </dependencies> <configuration> <swaggerInput>${swagger.file}</swaggerInput> 
						<outputDir>${apidocs.path}/markdown</outputDir> <markupLanguage>markdown</markupLanguage> 
						<separateDefinitions>true</separateDefinitions> <config> <swagger2markup.markupLanguage>MARKDOWN</swagger2markup.markupLanguage> 
						</config> </configuration> <executions> <execution> <id>markdown</id> <phase>generate-sources</phase> 
						<goals> <goal>convertSwagger2markup</goal> </goals> </execution> </executions> 
						</plugin> -->
					<!-- API Doc: adoc -->
					<plugin>
						<groupId>io.github.swagger2markup</groupId>
						<artifactId>swagger2markup-maven-plugin</artifactId>
						<version>${swagger2markup.version}</version>
						<dependencies>
							<dependency>
								<groupId>io.github.swagger2markup</groupId>
								<artifactId>swagger2markup-import-files-ext</artifactId>
								<version>${swagger2markup.version}</version>
							</dependency>
							<dependency>
								<groupId>io.github.swagger2markup</groupId>
								<artifactId>swagger2markup-spring-restdocs-ext</artifactId>
								<version>${swagger2markup.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<swaggerInput>${swagger.file}</swaggerInput>
							<outputDir>${apidocs.path}/asciidoc</outputDir>
							<config>
								<swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
								<!-- <swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy> -->
								<swagger2markup.extensions.dynamicOverview.contentPath>${asciidoc.path}/extensions/overview</swagger2markup.extensions.dynamicOverview.contentPath>
								<swagger2markup.extensions.dynamicDefinitions.contentPath>${asciidoc.path}/extensions/definitions</swagger2markup.extensions.dynamicDefinitions.contentPath>
								<swagger2markup.extensions.dynamicPaths.contentPath>${asciidoc.path}/extensions/paths</swagger2markup.extensions.dynamicPaths.contentPath>
								<swagger2markup.extensions.dynamicSecurity.contentPath>${asciidoc.path}/extensions/security/</swagger2markup.extensions.dynamicSecurity.contentPath>
								<swagger2markup.extensions.springRestDocs.snippetBaseUri>${asciidoc.path}</swagger2markup.extensions.springRestDocs.snippetBaseUri>
								<swagger2markup.extensions.springRestDocs.defaultSnippets>false</swagger2markup.extensions.springRestDocs.defaultSnippets>
							</config>
						</configuration>
						<executions>
							<execution>
								<id>asciidoc</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>convertSwagger2markup</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- Run the generated asciidoc through Asciidoctor to generate other 
						documentation types, such as PDFs or HTML5 -->
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>1.5.3</version>
						<!-- Include Asciidoctor PDF for pdf generation -->
						<dependencies>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-pdf</artifactId>
								<version>1.5.0-alpha.10.1</version>
							</dependency>
						</dependencies>
						<!-- Configure generic document generation settings -->
						<configuration>
							<sourceDirectory>${asciidoc.path}</sourceDirectory>
							<sourceDocumentName>index.adoc</sourceDocumentName>
							<attributes>
								<doctype>book</doctype>
								<toc>left</toc>
								<toclevels>3</toclevels>
								<numbered></numbered>
								<hardbreaks></hardbreaks>
								<sectlinks></sectlinks>
								<sectanchors></sectanchors>
								<generated>${apidocs.path}/asciidoc</generated>
							</attributes>
						</configuration>
						<!-- Since each execution can only handle one backend, run separate 
							executions for each desired output type -->
						<executions>
							<execution>
								<id>html5</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>html5</backend>
									<outputDirectory>${apidocs.path}/html5</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>pdf</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>pdf</backend>
									<outputDirectory>${apidocs.path}/pdf</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>docbook</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>pdf</backend>
									<outputDirectory>${apidocs.path}/docbook</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- <plugin> <groupId>org.asciidoctor</groupId> <artifactId>asciidoctor-maven-plugin</artifactId> 
						<version>1.5.3</version> <executions> <execution> <id>output-html</id> <phase>generate-resources</phase> 
						<goals> <goal>process-asciidoc</goal> </goals> <configuration> <output>${apidocs.path}/ascii</output> 
						</configuration> </execution> </executions> </plugin> -->
					<!-- Swagger UI -->
					<plugin>
						<groupId>com.googlecode.maven-download-plugin</groupId>
						<artifactId>download-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>swagger-ui</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>wget</goal>
								</goals>
								<configuration>
									<url>https://github.com/swagger-api/swagger-ui/archive/v${swagger-ui.version}.tar.gz</url>
									<unpack>true</unpack>
									<outputDirectory>${project.build.directory}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.6</version>
						<executions>
							<execution>
								<id>copy-swagger-ui</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${apidocs.path}/swagger-ui</outputDirectory>
									<resources>
										<resource>
											<directory>${project.build.directory}/swagger-ui-${swagger-ui.version}/dist</directory>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-yaml</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${apidocs.path}</outputDirectory>
									<resources>
										<resource>
											<directory>${swagger.path}</directory>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-asciidoc</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${apidocs.path}/asciidoc</outputDirectory>
									<resources>
										<resource>
											<directory>${asciidoc.path}</directory>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>checkstyle</id>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>2.17</version>
						<configuration>
							<logViolationsToConsole>true</logViolationsToConsole>
							<configLocation>${project.basedir}/assets/checkstyle/checkstyle.xml</configLocation>
							<propertiesLocation>${project.basedir}/assets/checkstyle/checkstyle.properties</propertiesLocation>
							<propertyExpansion>projectname=${project.artifactId}</propertyExpansion>
						</configuration>
					</plugin>
				</plugins>
			</reporting>
		</profile>
		<profile>
			<!-- Docker image -->
			<!-- https://github.com/fabric8io/docker-maven-plugin -->
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.15.14</version>
						<!-- <groupId>org.jolokia</groupId> <artifactId>docker-maven-plugin</artifactId> -->
						<extensions>true</extensions>
						<executions>
							<execution>
								<id>start</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>build</goal>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
							<execution>
								<id>build-docker-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<images>
								<image>
									<alias>${project.groupId}.${project.artifactId}</alias>
									<name>example/swagger-example-api</name>
									<build>
										<from>jboss/wildfly</from>
										<maintainer>thlaegler</maintainer>
										<assembly>
											<descriptor>${project.basedir}/assets/docker/assembly.xml</descriptor>
											<basedir>/opt/wildfly9/Wildfly-10.0.0.Final/standalone/deployments</basedir>
											<user>jboss:jboss:jboss</user>
										</assembly>
										<ports>
											<port>8080</port>
										</ports>
										<!-- <cmd> <shell>java -jar \ /maven/${project.build.finalName}.${project.packaging} 
											server \ /maven/docker-config.yml</shell> </cmd> -->
										<!-- <command>java -Djava.security.egd=file:/dev/./urandom -jar 
											/maven/${project.build.finalName}.${project.packaging}</command> -->
									</build>
									<run>
										<namingStrategy>alias</namingStrategy>
										<ports>
											<port>${server.port}:8080</port>
											<port>${server.port.admin}:8081</port>
										</ports>
										<volumes>
											<bind>
												<volume>${user.home}/logs:/logs</volume>
											</bind>
										</volumes>
										<wait>
											<log>Server startup complete</log>
											<url>http://${server.host}:${server.port}/</url>
											<time>20000</time>
										</wait>
										<log>
											<prefix>${project.artifactId}</prefix>
											<prefix>MQ</prefix>
											<date>DEFAULT</date>
											<color>YELLOW</color>
										</log>
									</run>
								</image>
								<!-- <image> <alias>mongodb</alias> <name>mongo:2.6.11</name> <run> 
									<namingStrategy>alias</namingStrategy> <cmd>-smallfiles</cmd> <wait> <log>waiting 
									for connections on port</log> <time>10000</time> </wait> <log> <prefix>MongoDB</prefix> 
									<color>yellow</color> </log> </run> </image> -->
								<!-- <image> <alias>db</alias> <name>postgres:9</name> <run> <wait> 
									<log>database system is ready to accept connections</log> </wait> </run> 
									</image> -->
							</images>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.19.1</version>
						<configuration>
							<phase>integration-test</phase>
							<includes>
								<include>**/*.java</include>
							</includes>
							<groups>${project.groupId}.IntegrationTest</groups>
							<systemPropertyVariables>
								<service.url>http://${server.host}:${server.port}/</service.url>
							</systemPropertyVariables>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Wildfly deployment -->
		<!-- See: https://docs.jboss.org/wildfly/plugins/maven/latest/plugin-info.html -->
		<!-- run "mvn wildfly:run" or "mvn wildfly:deploy" or "mvn wildfly:start" -->
		<profile>
			<!-- Remote deployment -->
			<id>deploy-remote</id>
			<build>
				<plugins>
					<plugin>
						<!-- https://mvnrepository.com/artifact/org.wildfly.plugins/wildfly-maven-plugin -->
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<version>1.1.0.Alpha11</version>
						<configuration>
							<skip>false</skip>
							<hostname>v22015123236530736.hotsrv.de</hostname>
							<port>9990</port>
							<username>management</username>
							<password>test</password>
							<!-- <filename>../lib/lib.war</filename> -->
							<!-- <filename>${project.build.finalName}.${project.packaging}</filename> -->
							<!-- <machine> <autoCreate>true</autoCreate> <createOptions> <virtualbox-memory>10000</virtualbox-memory> 
								<virtualbox-no-share></virtualbox-no-share> </createOptions> </machine> -->
							<!-- in-memory deployment -->
							<!-- <server-args> <server-arg>-Djboss.server.base.dir=/opt/WildFly/standalone/</server-arg> 
								<server-arg>-b=0.0.0.0</server-arg> </server-args> <java-opts> <java-opt>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005</java-opt> 
								</java-opts> <commands> <command>/subsystem=logging/file-handler=debug:add(level=DEBUG,autoflush=true,file={"relative-to"=>"jboss.server.log.dir", 
								"path"=>"debug.log"})</command> <command>/subsystem=logging/logger=org.jboss.as:add(level=DEBUG,handlers=[debug])</command> 
								</commands> <scripts> <script>config.cli</script> </scripts> <jboss-home>/opt/WildFly</jboss-home> 
								<modules-path>/opt/WildFly/modules</modules-path> <port>9999</port> <add-user> 
								<users> <user> <username>admin</username> <password>admin.1234</password> 
								</user> <user> <username>admin-user</username> <password>user.1234</password> 
								<groups> <group>admin</group> <group>user</group> </groups> <application-user>true</application-user> 
								</user> <user> <username>default-user</username> <password>user.1234</password> 
								<groups> <group>user</group> </groups> <application-user>true</application-user> 
								</user> </users> </add-user> -->
						</configuration>
						<!-- <executions> <execution> <id>add-datasource</id> <phase>package</phase> 
							<goals> <goal>add-resource</goal> </goals> <configuration> <address>subsystem=datasources,data-source=java:jboss/myDs</address> 
							<resources> <resource> <properties> <jndi-name>java:jboss/myDs</jndi-name> 
							<enabled>true</enabled> <connection-url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1</connection-url> 
							<driver-class>org.h2.Driver</driver-class> <driver-name>h2</driver-name> 
							<user-name>sa</user-name> <password>sa</password> </properties> </resource> 
							<resource> <address>xa-data-source=java:jboss/datasources/postgresDS</address> 
							<properties> <xa-datasource-class>org.postgresql.xa.PGXADataSource</xa-datasource-class> 
							<jndi-name>java:jboss/datasources/postgresDS</jndi-name> <enabled>true</enabled> 
							<driver-name>postgresql.jar</driver-name> </properties> <resources> <resource> 
							<address>xa-datasource-properties=DatabaseName</address> <properties> <value>myDatabase</value> 
							</properties> </resource> <resource> <address>xa-datasource-properties=ServerName</address> 
							<properties> <value>localhost</value> </properties> </resource> <resource> 
							<address>xa-datasource-properties=User</address> <properties> <value>dbuser</value> 
							</properties> </resource> <resource> <address>xa-datasource-properties=Password</address> 
							<properties> <value>supersecret</value> </properties> </resource> </resources> 
							</resource> <resource> <address>subsystem=messaging,hornetq-server=default,jms-queue=myJmsQueue</address> 
							<properties> <durable>true</durable> <entries>!!["java:jboss/myJmsQueue", 
							"java:jboss/myJmsQueueAlias"]</entries> </properties> </resource> </resources> 
							</configuration> </execution> </executions> -->
					</plugin>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
							<container>
								<containerId>wildfly10x</containerId>
								<type>remote</type>
							</container>
							<configuration>
								<type>runtime</type>
								<properties>
									<cargo.hostname>localhost</cargo.hostname>
									<cargo.servlet.port>8080</cargo.servlet.port>
									<cargo.remote.username>admin</cargo.remote.username>
									<cargo.remote.password>admin</cargo.remote.password>
								</properties>
							</configuration>
							<deployables>
								<deployable>
									<groupId>com.laegler.swagger</groupId>
									<artifactId>swagger-example-api</artifactId>
									<type>war</type>
									<properties>
										<context>/example</context>
									</properties>
								</deployable>
							</deployables>
						</configuration>
						<executions>
							<execution>
								<id>start-server</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>deploy</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- Localhost deployment -->
			<id>deploy-localhost</id>
			<build>
				<plugins>
					<plugin>
						<!-- https://mvnrepository.com/artifact/org.wildfly.plugins/wildfly-maven-plugin -->
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<version>1.1.0.Alpha11</version>
						<configuration>
							<skip>false</skip>
							<hostname>localhost</hostname>
							<port>9990</port>
							<username>management</username>
							<password>test</password>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


	<dependencies>
		<dependency>
			<groupId>org.wildfly.bom</groupId>
			<artifactId>wildfly-javaee7</artifactId>
			<version>10.1.0.Final</version>
			<type>pom</type>
			<scope>import</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/io.swagger/swagger-annotations -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger-core-version}</version>
		</dependency>

		<!-- URL Rewrite -->
		<!-- https://mvnrepository.com/artifact/org.tuckey/urlrewritefilter -->
		<!-- <dependency>
			<groupId>org.tuckey</groupId>
			<artifactId>urlrewritefilter</artifactId>
			<version>4.0.4</version>
			<scope>runtime</scope>
		</dependency> -->

		<!-- Apache Oltu OAuth2 -->
		<!-- https://mvnrepository.com/artifact/org.apache.oltu.oauth2/org.apache.oltu.oauth2.common -->
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.common</artifactId>
			<version>${oltu.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.oltu.oauth2/org.apache.oltu.oauth2.resourceserver -->
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.resourceserver</artifactId>
			<version>${oltu.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.oltu.oauth2/org.apache.oltu.oauth2.authzserver -->
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.authzserver</artifactId>
			<version>${oltu.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.oltu.oauth2/org.apache.oltu.oauth2.client -->
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.client</artifactId>
			<version>${oltu.version}</version>
		</dependency>

		<!-- Android Dependencies -->
		<!-- <dependency> <groupId>com.squareup.retrofit2</groupId> <artifactId>converter-gson</artifactId> 
			<version>${retrofit.version}</version> </dependency> <dependency> <groupId>com.squareup.retrofit2</groupId> 
			<artifactId>retrofit</artifactId> <version>${retrofit.version}</version> 
			</dependency> <dependency> <groupId>com.squareup.retrofit2</groupId> <artifactId>converter-scalars</artifactId> 
			<version>${retrofit.version}</version> </dependency> <dependency> <groupId>com.squareup.okhttp</groupId> 
			<artifactId>okhttp</artifactId> <version>${okhttp.version}</version> </dependency> 
			<dependency> <groupId>com.squareup.okhttp</groupId> <artifactId>logging-interceptor</artifactId> 
			<version>${okhttp.version}</version> </dependency> -->
		<dependency>
			<groupId>gr.spinellis</groupId>
			<artifactId>UmlGraph</artifactId>
			<version>4.6</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/nl.talsmasoftware/umldoclet -->
		<dependency>
			<groupId>nl.talsmasoftware</groupId>
			<artifactId>umldoclet</artifactId>
			<version>1.0.3</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.umlgraph/doclet -->
		<!-- http://services.tidalwave.it/nexus/content/repositories/releases/ -->
		<!-- <dependency> <groupId>org.umlgraph</groupId> <artifactId>doclet</artifactId> 
			<version>5.4</version> </dependency> -->

		<!-- https://mvnrepository.com/artifact/javax.faces/jsf-api -->
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet-api-version}</version>
			<!-- <scope>provided</scope> -->
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jaxrs</artifactId>
			<!-- <version>3.0.14.Final</version> -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-validator-provider-11</artifactId>
			<!-- <version>${resteasy-version}</version> -->
			<!-- <scope>provided</scope> -->
		</dependency>
		<!-- <dependency> <groupId>org.jboss.resteasy</groupId> <artifactId>resteasy-jackson2-provider</artifactId> 
			<version>2.5.1</version> <exclusions> <exclusion> <groupId>com.fasterxml.jackson.jaxrs</groupId> 
			<artifactId>jackson-jaxrs-base</artifactId> </exclusion> </exclusions> </dependency> -->
		<!-- <dependency> <groupId>com.fasterxml.jackson.jaxrs</groupId> <artifactId>jackson-jaxrs-json-provider</artifactId> 
			<version>2.5.1</version> <scope>provided</scope> </dependency> -->
		<!-- <dependency> <groupId>javax.annotation</groupId> <artifactId>javax.annotation-api</artifactId> 
			<version>1.2</version> <scope>provided</scope> </dependency> -->
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.5.4</version>
		</dependency>


		<!-- <dependency> <groupId>com.fasterxml.jackson.datatype</groupId> <artifactId>jackson-datatype-joda</artifactId> 
			<version>2.4.1</version> </dependency> <dependency> <groupId>joda-time</groupId> 
			<artifactId>joda-time</artifactId> <version>2.7</version> </dependency> -->

		<!-- TEST -->
		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<!-- <version>${junit.version}</version> -->
			<scope>compile</scope>
			<!-- <scope>test</scope> -->
		</dependency>

		<!-- Mockito und PowerMock -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<!-- <version>${mockito.version}</version> -->
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<!-- <version>${powermock.version}</version> -->
			<scope>test</scope>
			<exclusions>
				<!-- exclude hamcrest-core 1.1 because of conflicting dependencies. Using 
					1.3 from REST-Aassured -->
				<exclusion>
					<groupId>org.hamcrest</groupId>
					<artifactId>hamcrest-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- REST-Assured -->
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<!-- <version>${restassured.version}</version> -->
			<!-- <scope>test</scope> -->
			<scope>provided</scope>
		</dependency>

		<!-- Cucumber und Gherkin -->
		<!-- <dependency> <groupId>info.cukes</groupId> <artifactId>cucumber-jvm</artifactId> 
			<version>${cucumber.version}</version> <type>pom</type> <scope>test</scope> 
			<scope>provided</scope> </dependency> -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-core</artifactId>
			<!-- <version>${cucumber.version}</version> -->
			<!-- <scope>test</scope> -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-java</artifactId>
			<!-- <version>${cucumber.version}</version> -->
			<!-- <scope>test</scope> -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<!-- <version>${cucumber.version}</version> -->
			<!-- <scope>test</scope> -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>gherkin</artifactId>
			<!-- <version>2.12.2</version> -->
			<!-- <scope>test</scope> -->
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.8.8</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>junit</artifactId>
					<groupId>junit</groupId>
				</exclusion>
				<exclusion>
					<artifactId>snakeyaml</artifactId>
					<groupId>org.yaml</groupId>
				</exclusion>
				<exclusion>
					<artifactId>bsh</artifactId>
					<groupId>org.beanshell</groupId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

</project>
