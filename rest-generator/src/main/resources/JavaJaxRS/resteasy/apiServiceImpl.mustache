package {{package}}.impl;

import {{package}}.*;
import {{modelPackage}}.*;
import java.util.ArrayList;
import javax.ws.rs.core.GenericEntity;
{{#operations}}{{#operation}}{{#isMultipart}}import org.jboss.resteasy.plugins.providers.multipart.MultipartFormDataInput;
{{/isMultipart}}{{/operation}}{{/operations}}

{{#imports}}import {{import}};
{{/imports}}

import java.util.List;
import {{package}}.NotFoundException;

import java.io.InputStream;

import javax.ws.rs.core.Response;
import javax.ws.rs.core.SecurityContext;

{{>generatedAnnotation}}
{{#operations}}
public class {{classname}}ServiceImpl extends {{classname}}Service {
  {{#operation}}
      @Override
      public Response {{nickname}}({{#isMultipart}}MultipartFormDataInput input,{{/isMultipart}}{{#allParams}}{{>serviceQueryParams}}{{>servicePathParams}}{{>serviceHeaderParams}}{{>serviceBodyParams}}{{^isMultipart}}{{>serviceFormParams}},{{/isMultipart}}{{#isMultipart}}{{^isFormParam}},{{/isFormParam}}{{/isMultipart}}{{/allParams}}SecurityContext securityContext)
      throws NotFoundException {
      
      // TODO: This is REST API mock-method returning an example response.
      // You have to customize the result in this method like:
      // Something result = builder.id(1).name("my name").build();
      {{^isListContainer}}
      {{#responses.0.schema.genericRef}}
      {{responses.0.schema.genericRef.simpleRef}} result = {{responses.0.schema.genericRef.simpleRef}}.getExample();
      return Response.ok().entity(result).build();
      {{/responses.0.schema.genericRef}}
      {{^responses.0.schema.genericRef}}
      ApiResponseMessage result = new ApiResponseMessage(ApiResponseMessage.OK, "dummy response");
      return Response.ok().entity(result).build();
      {{/responses.0.schema.genericRef}}
      {{/isListContainer}}
      {{#isListContainer}}
      List<{{responses.0.baseType}}> results = new ArrayList<{{responses.0.baseType}}>();
      results.add({{responses.0.baseType}}.getExample());
      results.add({{responses.0.baseType}}.getExample());
      results.add({{responses.0.baseType}}.getExample());
      return Response.ok().entity(new GenericEntity<List<{{responses.0.baseType}}>>(results){}).build();
      {{/isListContainer}}
      
      
  }
  {{/operation}}
}
{{/operations}}